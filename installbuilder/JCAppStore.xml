<project>
    <shortName>JCAppStore</shortName>
    <fullName>JCAppStore</fullName>
    <version>2.0</version>
    <readmeFile>../README.md</readmeFile>
    <licenseFile>../LICENSE</licenseFile>
    <leftImage>../src/main/resources/img/icon.png</leftImage>
    <logoImage>../src/main/resources/img/icon.png</logoImage>
    <splashImage>../src/main/resources/img/splash.png</splashImage>
    <componentList>
        <component>
            <name>default</name>
            <description>Default Component</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <desktopShortcutList>
                <shortcut>
                    <comment>Smart Card Application Distribution Platform and Manager</comment>
                    <exec>${installdir}/JCAppStore.sh</exec>
                    <icon>${installdir}/src/main/resources/img/icon.png</icon>
                    <name>JCAppStore</name>
                    <path>${installdir}</path>
                    <platforms>all</platforms>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}\JCAppStore.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}\src\main\resources\img\icon.ico</windowsIcon>
                    <windowsPath>${installdir}</windowsPath>
                </shortcut>
            </desktopShortcutList>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>store.asc</origin>
                        </distributionFile>
                    </distributionFileList>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runAsAdmin>0</runAsAdmin>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon></windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>../build/deploy-unix/src</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../build/deploy-unix/JCAppStore.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>installer-unix/keyring.sh</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>../build/deploy-unix/src</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../build/deploy-unix/JCAppStore.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>installer-unix/keyring.sh</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>installer-win/keyring.bat</origin>
                        </distributionFile>
                        <distributionDirectory>
                            <origin>../build/deploy-win/src</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../build/deploy-win/JCAppStore.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows64</name>
                    <platforms>windows-x64</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>installer-win/keyring.bat</origin>
                        </distributionFile>
                        <distributionDirectory>
                            <origin>../build/deploy-win/src</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../build/deploy-win/JCAppStore.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>installer-unix/keyring.sh</origin>
                        </distributionFile>
                        <distributionDirectory>
                            <origin>../build/deploy-unix/src</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../build/deploy-unix/JCAppStore.jar</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
                <startMenuShortcut>
                    <comment>Smart Card Manager</comment>
                    <name>JCAppStore</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}\JCAppStore.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}\src\main\resources\img\icon.ico</windowsIcon>
                    <windowsPath></windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
    </componentList>
    <readyToInstallActionList>
        <autodetectJava abortOnError="0" promptUser="0" showMessageOnError="0">
            <validVersionList>
                <validVersion>
                    <bitness></bitness>
                    <maxVersion></maxVersion>
                    <minVersion>11.0.11</minVersion>
                    <requireJDK>1</requireJDK>
                    <vendor></vendor>
                </validVersion>
            </validVersionList>
        </autodetectJava>
        <actionGroup>
            <actionList>
                <actionGroup>
                    <actionList>
                        <showWarning>
                            <text>JCAppStore requires Java JDK 11.0.2+ in order to work. You can install java using terminal and continue (confirm this message) after Java is installed. Example for Ubuntu: sudo apt install default-jdk</text>
                        </showWarning>
                    </actionList>
                    <ruleList>
                        <platformTest type="linux"/>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <showProgressDialog>
                            <title>Downloading dependencies: JAVA</title>
                            <actionList>
                                <httpGet>
                                    <customErrorMessage>Could not download JAVA Liberica. JDK Java 11.0.2+ is required for JCAppStore to run. You can try to download any java JDK 11.0.2+ manually.</customErrorMessage>
                                    <filename>${system_temp_directory}/java.pkg</filename>
                                    <url>https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jdk_x64_mac_hotspot_16.0.1_9.pkg</url>
                                </httpGet>
                            </actionList>
                        </showProgressDialog>
                        <runProgram>
                            <program>installer</program>
                            <programArguments>-pkg ${system_temp_directory}/java.pkg -target CurrentUserHomeDirectory</programArguments>
                        </runProgram>
                    </actionList>
                    <onErrorActionList>
                        <showWarning>
                            <text>You need to have Java JDK 11.0.2+ to run this application.</text>
                        </showWarning>
                    </onErrorActionList>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <showProgressDialog>
                            <title>Downloading dependencies: JAVA</title>
                            <actionList>
                                <httpGet>
                                    <customErrorMessage>Could not download JAVA Liberica. JDK Java 11.0.2+ is required for JCAppStore to run. You can try to download any java JDK 11.0.2+ manually.</customErrorMessage>
                                    <filename>${system_temp_directory}\java.msi</filename>
                                    <url>https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jdk_x64_windows_hotspot_16.0.1_9.msi</url>
                                </httpGet>
                            </actionList>
                        </showProgressDialog>
                        <runProgram>
                            <program>msiexec</program>
                            <programArguments>/i "${system_temp_directory}\java.msi" /qf</programArguments>
                        </runProgram>
                    </actionList>
                    <onErrorActionList>
                        <showWarning>
                            <text>You need to have Java JDK 11.0.2+ to run this application.</text>
                        </showWarning>
                    </onErrorActionList>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <isFalse value="${java_autodetected}"/>
            </ruleList>
        </actionGroup>
    </readyToInstallActionList>
    <postInstallationActionList>
        <if>
            <actionList>
                <showQuestion>
                    <default>yes</default>
                    <text>GnuPG is used by JCAppStore to verify software integrity. Without the verification, software installed is potentially insecure (e.g. somebody might modify it). Do you want JCAppStore to verify software (applets) integrity before installation (import JCAppStore public key with ultimate trust into GnuPG)?</text>
                    <title>GnuPG</title>
                    <variable>import_key</variable>
                </showQuestion>
            </actionList>
            <conditionRuleList>
                <programTest>
                    <condition>is_in_path</condition>
                    <name>gpg</name>
                </programTest>
            </conditionRuleList>
            <elseActionList>
                <showInfo>
                    <text>You have no GnuPG installed, or it is not in your PATH. GnuPG is required for us to verify applet integrity before we install them on your card. You can install GnuPG anytime (or provide correct path to GnuPG executable in JCAppStore settings). You will also have to import JCAppStore public key to your GnuPG database (see Github Wiki).</text>
                </showInfo>
            </elseActionList>
        </if>
        <if>
            <actionList>
                <actionGroup>
                    <actionList>
                        <autodetectJava promptUser="0">
                            <validVersionList>
                                <validVersion>
                                    <bitness></bitness>
                                    <maxVersion></maxVersion>
                                    <minVersion>11.0.11</minVersion>
                                    <requireJDK>1</requireJDK>
                                    <vendor></vendor>
                                </validVersion>
                            </validVersionList>
                        </autodetectJava>
                        <runProgram>
                            <program>chmod</program>
                            <programArguments>u+x ${installdir}/keyring.sh</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>${installdir}/keyring.sh</program>
                            <programArguments></programArguments>
                        </runProgram>
                        <showInfo>
                            <text>The key was successfully imported.</text>
                        </showInfo>
                    </actionList>
                    <ruleList>
                        <platformTest type="linux"/>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <runProgram>
                            <program>chmod</program>
                            <programArguments>u+x ${installdir}/keyring.sh</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>${installdir}/keyring.sh</program>
                            <programArguments></programArguments>
                        </runProgram>
                        <showInfo>
                            <text>The key was successfully imported.</text>
                        </showInfo>
                    </actionList>
                    <ruleList>
                        <platformTest type="osx"/>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <runProgram>
                            <breakpoint>1</breakpoint>
                            <explanation>Importing JCAppStore public key</explanation>
                            <program>${installdir}\keyring.bat</program>
                            <programArguments></programArguments>
                        </runProgram>
                        <showInfo>
                            <text>The key was successfully imported.</text>
                        </showInfo>
                    </actionList>
                    <onErrorActionList>
                        <showInfo>
                            <text>Failed to import JCAppStore public key. You can do this manually using a command line. For more information see Wiki in our repository on GitHub.</text>
                        </showInfo>
                    </onErrorActionList>
                    <ruleList>
                        <platformTest type="windows"/>
                    </ruleList>
                </actionGroup>
            </actionList>
            <conditionRuleList>
                <compareText logic="equals" text="${import_key}" value="yes"/>
            </conditionRuleList>
        </if>
        <actionGroup>
            <actionList>
                <writeFile>
                    <encoding>utf-8</encoding>
                    <path>${installdir}/JCAppStore.sh</path>
                    <text>
#!/bin/bash
java -jar ./JCAppStore.jar
​</text>
                </writeFile>
                <runProgram>
                    <program>chmod</program>
                    <programArguments>755 JCAppStore.sh</programArguments>
                    <runAs>Administrator</runAs>
                    <workingDirectory>${installdir}</workingDirectory>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest type="linux"/>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <writeFile>
                    <encoding>utf-8</encoding>
                    <path>${installdir}/JCAppStore.sh</path>
                    <text>
#!/bin/bash
java -jar ./JCAppStore.jar
</text>
                </writeFile>
                <runProgram>
                    <program>chmod</program>
                    <programArguments>755 JCAppStore.sh</programArguments>
                    <runAs>Administrator</runAs>
                    <workingDirectory>${installdir}</workingDirectory>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest type="osx"/>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <showWarning>
                    <text>We could not import the public key. You can do this by yourself anytime though. For more information, see our GirHub wiki.</text>
                </showWarning>
            </actionList>
            <ruleList>
                <compareText logic="equals" text="${program_exit_code}" value="0">
                    <negate>1</negate>
                </compareText>
            </ruleList>
        </actionGroup>
    </postInstallationActionList>
    <createOsxBundleDmg>1</createOsxBundleDmg>
    <enableRollback>0</enableRollback>
    <enableSslSupport>1</enableSslSupport>
    <enableTimestamp>1</enableTimestamp>
    <saveRelativePaths>1</saveRelativePaths>
    <vendor>CRoCS</vendor>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}-${product_version}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
        </directoryParameter>
    </parameterList>
    <platformOptionsList>
        <platformOptions>
            <platform>osx</platform>
        </platformOptions>
        <platformOptions>
            <platform>linux</platform>
        </platformOptions>
    </platformOptionsList>
</project>

