#welcome screen
welcome = Welcome in JCAppStore
tips = There are two things that will help you:<br> \
  1. This tool won't allow you to <b>use</b> the card application, always read the <b>use section</b> in store! <br /> \
  2. If the store cannot load your card and you don't know the reason, re-plug it. Try to restart the store. If nothing helps, \
  the card is probably broken (or cannot be modified anymore - known as SECURED state). <br><br> \
  Click to close.


#H_ hint
#W_ warning
#E_ error

loading_opts = Loading options...
detect_cards = Detecting cards...
failed_detect = Failed to load card.
launch = Creating window...
card_refresh = RELOAD CARD
store_refresh = RE-DOWNLOAD STORE
no_reader = No card reader detected.
E_service = No card service enabled.
H_service = Smart card resource manager is offline. Enable smart card resource manager and \
  restart the application. For Windows, enable \"Smart card\" service (three services from Windows 10). For UNIX systems, install \"openSC\" driver. <br><b>Note:</b> \
  you might've to also restart your computer.
E_could_not_get_memory = Failed to measure card memory
wrong_kcv = Invalid key check value (KCV) specified in cards.ini file. Fin unsure, delete the kcv value.

no_channel = Cannot detect card channel. Raise issue on our github repo.
E_fail_to_detect_sd = Could not detect Security Domain. The card is probably locked or otherwise inaccessible.
no_card = No card in the selected reader.
H_no_card = We didn't detect a card. Try to re-plug the card reader or make sure the card is not damaged.
missing_card = Insert card to proceed.
send_APDU_to = Send command (APDU) to 
search_SW = For more info, search 'SW
package_for = Package for 
packages = packages
applets = applets
applet_name = Applet name: 
sds = security domains
cause = Cause:
package = Package
applet = Applet
sd = Security domain
isd = Issuer security domain

app_id = Applet ID: 
pkg_id = Package ID: 
display = Display
display_desc = Show window components or set verbose mode.
card = Card
card_desc = Card information data
aid = AID: 
delete = Delete 
CAP_delete_applet = DELETE APPLET 
delete_anyway = Delete anyway
applet_uninstall_1 = This action will uninstall an applet 
applet_uninstall_2 = that 
CAP_install = INSTALL
CAP_reinstall = REINSTALL
install = Install
selected_apps = Recommended
all_apps = All applets
failed_to_reload = Card reload failed
may_contain = may contain 
contains = contains 
version = Version: 
type = Type: 
sd_assigned = Domain assigned: 
reporter=JCAppStore bug reporter
working=working...
failed_to_list_aps=Failed to load installed applets. Please, try again. If problem persists, contact us.
card_info = Card information
E_background=Failed to update background. The image does not exists or the app cannot read it.
E_invalid_version=No version to install chosen.
E_invalid_compiler=No compiler version chosen.
E_invalid_install_params = Invalid parameters for installation - either even length or too much data.
W_installed = This applet is already installed on the card. Keep the force option checked to re-install.
info = Notice
no_file_signature = Could not verify the signature. File is missing.
no_pgp = Signature failed: GnuPG not found. Did you provide correct path in settings?
signature_aborted = Couldn't finish verifying the file signature.
custom_file = <b>Warning</b>: the file integrity was not checked. Either you trust this file, or verify its authenticity \
  by specifying detached signature file in Advanced settings.

unable_to_translate = Unable to translate following error.
reader_avail = Available card reader
W_ = Warning
W_store_loading = Loading failed: no data found. Please try it again.
waiting_internet = Waiting for internet connection...
downloading = Downloading 
unavailbale = unavailable
E_store_generic = Unknown error. Please try again.
E_store_timeout = Loading timeout. Your internet connection or the github.com server is unavailable.
E_store_outdated = Could not download the newest store version\n which is required for JCAppStore to work flawlessly.\n Please, try again.
E_no_internet = No connection found.
E_store_jcapp_outdated = The JCAppStore is too old. Please, update at least to version
unzip = Unzipping...

E_no_browser = Could not finish the action: could not open a web browser.

# hint applet usage
au_title = How to use applets
au_introduction = Once you install the applet, you need to use it somehow. The way the applet communicates with the computer \
  is through APDU messages (for more info check our documentation). It basically sends array of numbers with defined \
  meaning. To communicate with installed applet, you need to have either host-side application written for the applet \
  or general software that allows you to sent the APDU messages yourself.
au_host_title = Host application
au_host = If you are lucky, the host application is already written and all you have to do is visit the developer's \
  webpage and install it. The application may be with GUI like this store, then it will be intuitive. Or, the host app \
  may be for command line only. Then, you need to run the application from the command line. For command line usage, \
  see Command Line section of our help. The cmd version may be a bit harder to use, especialy for non-developers. \
  However, you don't need to send the APDU messages manually and that is the main advantage.
au_no_host_title = General APDU software
au_no_host = If the host application doesn't exist, you need to download either GPShell or GlobalPlatformPro tools and \
  install them. You need to learn how to use them so that you can send the APDU messages to specific applet on card. \
  Also, you need to learn the APDU structure and the way the developer uses it so you are able to actually communicate \
  with the card. If you are unable to install the applet using GPShell or GPPro (e.g. without this store), and not \
  willing to lear a lot of things, do not install such applets.

# hint default selected
def_title = Main applet
def_h = Also called default selected,\nan applet that is always ready to\nreceive commands.
def_introduction = Main applet (or default selected, as it is called in the Global Platform specification) is an applet \
  that are all incoming APDU commands sent to by default. The card usually hosts multiple applets and when communicating \
  with an applet, the card host has to first decide on which is the applet to talk to. This can be done usually by sending \
  SELECT command before actual communication - the card is told the applet AID we want to talk to. There is also another way: \
  creating the desired applet as a main applet. In such case, all commands (except some reserved ones) are sent to the main applet \
  by default, though other applets can be selected (SELECT command is one of the reserved ones, it is sent always to the Security \
  Domain).
def_why_title = Why making any applet MAIN?
def_why = There are two options. The first is that the host app developer was too lazy to make sure every time is the SELECT command \
  issued when talking to the card. In this case, the card will not work with such host because the host presumes the applet is \
  already selected (e.g. main). The other option is efficiency. Payment cards (credit/debit) are meant to run only one applet. \
  The card will never run other applets (except security domain), because it is already in SECURED state (e.g. management is limited). \
  Sometimes you may notice people use 'card' and 'applet' as equal terms - in this case, the applet literally equals card as the only \
  purpose of that card is to run the applet. There is no need for SELECT command - it will only slow down transactions.
def_why_main_title = Why the term 'Main applet'?
def_why_main = Because if you know the GP specification, calling it default selected makes sense. But for the majority, 'default selected' \
  is not self-explanatory. Main applet makes you think about an applet that is somehow exceptional among other applets, its existence \
  significant on the card - as a default selected applet should be.

# hint installation failures
ifaq_title = Installation failures FAQ
ifaq_h = FAQ on why your installation fails
ifaq_cardstate_title = Invalid card lifecycle state
ifaq_cardstate = If your card lifecycle state is not OP_READY (e.g. initial), the store does not support this card. There \
  other card life cycle states, the state change is usually irreversible. OP_READY state is for any initial card management \
  - installation and deletion of applets. Other states are meant for issued cards, terminated, locked etc. But if your card is \
  not in the OP_READY state, the store will refuse to recognize the card - the installation will be never allowed in the first place.
ifaq_low_memory_title = Low memory
ifaq_low_memory = Cards have limited amount of memory. Before each installation, the store installs JCMemory onto your card \
  to measure free space and to estimate the probability of low memory failure. You are always notified by the store when such \
  event occurs, simply uninstall other applets to free some memory.
ifaq_wrong_sdk_title = Wrong SDK version
ifaq_wrong_sdk = Applets are developed using libraries - SDK. Different applets support different SDK versions. The backward \
  compatibility is guaranteed. If your installation fails with unsupported SDK version, simply choose lesser SDK version \
  at the bottom of the applet store info page.
ifaq_ip_title = Invalid installation parameters
ifaq_ip = Some applets require installation parameters (advanced section of the install dialog window). More info can be found \
  in the 'Use' section of the applet store info page.
ifaq_tech_title = Unsupported technology
ifaq_tech = Various applets require various technology in order to run. EAC (extended access control) for biometric data, \
  NFC (near field communication) for wireless use, Extended Length for longer APDU commands support, various cryptographics \
  functions implementations (elliptic curves..) and many other. This info can be usually found in the official applet repository \
  - website link section of the applet store info page. About your card support, ask your vendor or see JCAlgTest database \
  (https://www.fi.muni.cz/~xsvenda/jcalgtest/).
ifaq_general_title = General failure
ifaq_general = The installation can fail with other error codes. The usual reasons are: 1) there is running app on the background \
  that keeps talking to the card. In such case, either kill this app to let the store use your card exclusively during the installation, \
  or enable 'Card exclusive mode' in the 'App' store menu; or 2) the new applet/package id collides with already installed ones - \
  you can have only unique applet/package IDs on your card simultaneously; or 3) problems with establishing channel and/or card communication \
  - there is wide variety of reasons why this can happen, simply re-plug the card and/or reader. If the problem persists, there is high \
  chance of your card being somehow broken (hw/sw issues).

# hint cmd usage
cmd_title = Command Line swift guide
cmd_introduction = Command line is the native way how to control any digital device. Graphical interface is only an \
  feature to ease the application usage, though today very common. Some applications do not have GUI, and therefore \
  you need to know how to use command line. Once running an application through command line (for example you've used \
  java -jar myapp.jar), you can typically use generaly supported command <b>--help</b> or <b>-h</b> or even <b>help</b> \
  to display help.
cmd_browse_title = Browsing the device
cmd_browse = First thing you need to do is to learn how to navigate. Next to the cursor is usually displayed your \
  current position in the directory tree structure.<br>Use command <b>cd</b> to change directory. To go into hello \
  directory, use <b>cd hello</b>. But, the hello folder has to exist inside your current folder. To go up, use <b>cd ..</b>, \
  where two dots mean parent folder. To ease the file and firectory name typing, use TAB key to fill the rest of the folder \
  name. For example, instead of typing 'hello' type 'he' only and press TAB. The computer will fill in 'hello' if such folder \
  exists or 'hella' for example, because 'hella' folder also exists and 'a' is before 'o' in alphabet. In such case, press TAB again. \
  <br>To show content of your current directory use <b>ls</b> command on linux or <b>dir</b> command on windows.\
  <br><br> IMPORTANT: as you may have noticed the commands are separated by spaces. Thus, space in any name is a problem.\
  To avoid it, enclose such filenames or folders in " or ' characters ("/my awesome folder").
cmd_launch_linux_title = Start an application - Linux
cmd_launch_linux = To start a host app, easiest way for beginners it to navigate to the directory the app is in. \
  Use <b>ls -l</b> to display the file properties. \
  If desired file contains 'x' in the permissions, then it should be ok and all you need to do is to type the filename \
  along with its extension as any other command. In case the application doesn't run, type './[appname].[extension]' instead.
cmd_launch_win_title = Start an application - Windows
cmd_launch_win = To start a host app, easiest way for beginners it to navigate to the directory the app is in. \
  Then see the file extension using dir command. If it's an 'exe' file, then it should be ok and all \
  you need to do is to type the filename along with its extension as any other command, for example myapp.exe.
cmd_lanuch_Java_title = Start Java application (.jar)
cmd_lanuch_Java = The host applications are mostly written in Java, because the card runs Java. So writing the host application \
  in Java too makes sense. To launch Java application, you need to download JRE if you don't have it already. JRE stands for \
  Java Runtime Environment and it's a software that can run the Java application. Once you have this installed, and you \
  are in a folder the .jar file is, run following command: <b> java -jar TheAppFileName.jar </b> where you need to fill in \
  the correct app file name. In case the 'java' command is not found, make sure that the JRE install folder location is \
  in your Path environment variable. This should be done automatically during install though.

#hint master key
mk_title = Card master authentication
mk_intro = The card is protected by master key. This value is set to the card by vendor, usually 4041...4E4F. However, \
  some vendors may use unique test keys or you've changed the master key; and thus we can't load the card contents. \
  The key consists of 3 parts (called mac, enc, dec) that can be converted to one single long key (password). We support only one-valued \
  master key. To derive the one key from its three parts, either ask your card vendor or search on the Internet for 'smart \
  card key diversification' or 'how to derive single key using mac enc dec'. There are several methods for the derivation; \
  you need to know which one has to be used (also ask your vendor or find this information on their website).
mk_title_ini = Providing the correct key
mk_ini = To load such card, provide the application with correct key value. You have to modify cards.ini file inside \
  JCAppStore folder located in your user folder (Documents in windows for example). Once here, modify two values under correct \
  card identifier header. This may be problem if you plugged in more than once card, because there is metadata of every card \
  that was plugged in while running store. If you don't know the id of card, try to re-plug the card onto application to display it. Find the \
  correct block with the data of the card you cannot connect to, and set key to the correct value. Set auth = true so that \
  the store will try to authenticate.

#  left menu -->
my_card = My card
app_store = Applet Store
search = Search...

# reporter -->
unknown_error=Unknown error occurred.
send=Send
send_not=Don't send

#jcalgtest dependencies
jc_unknown = The support database was not found for this card type.
jc_title = Inspection result details
not_found = We don't have JCAlgTest's results for this card. <b>We cannot verify</b> this applet <b>compatibility</b>.
unmet_requirements = This applet uses some technology not supported by your card. This installation will likely fail.
not_found_sdk = Unable to detect card SDK. In case of failure, make sure the applet SDK is supported by this card.
test_date = Data acquisition: 
reader_user = Tested with reader: 
your_sdk = Maximum SDK version supported:
applet_sdk = SDK version required:
not_supported_requirements_list = List of required (and not supported) calls:
jcfile_failure = Could not verify the smart card support: the installation might fail.
jc_test_note = Note: this is detailed information for more advanced users. You cannot do anything to fix this issue - \
  you can only try to install the applet. In case it fails, use another card that does support this technology.
jc_install_failure = Could not install JCAlgTest applet onto your card. Please, try to install the applet manually \
  (from the store) and run the test again. <br> NOTE: JCAlgTest is a big application. \
  The <b>installation failed likely because of low memory</b>. Uninstall some applets first.
E_jc_run = Could not run JCAlgTest
#jcalgtest dialog
jcdia_title = Test support for algorithms
jcdia_intro = Test your smart card for technology (algorithm) support. This feature is useful in case your card was \
  not found in the JCAlgTest database and we cannot assess store applets compatibility.
jcdia_card_name = Fill in the card type name
H_jcdia_card_name = Please provide us with card name as advertised by vendor. We need to know which card is being tested.
jcdia_send = Send the results to JCAlgTest database.
H_jcdia_send = Share the results with others and help us grow the card test results database. Other people with the same \
  card type will no longer need to run the test again.
jcdia_warn = Note: this test might take from <b>5 to 20 minutes to finish</b>. Let the program finish - do not force close \
  while it's running. <br><b>IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN \
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
jcdia_confirm = Run test
jcdia_hint_progress = Hint: Open a logger to see the progress (ALT+L).
E_jcdia_parse_file = Failed to load the output from the test: if you've shared the results (you can do so manually), \
  the tests results will be loaded from the shared source once it's approved.
E_jcdia_fire_client = Unable to run a JCAlgTest client application through command line. Please, notify us using \
  a github issues platform.
E_no_java = Could not find java. Please, provide the correct java executable path in the dialog window showed before or \
   using options file (JCAppStore/data/JCAppStore.options) or add java to your PATH environment variable.
jcdia_runmsg = Testing a smart card: this process might take from 5 to 20 minutes...
jcdia_nosdk = Unable to find card SDK support. In case you are installing an applet using SDK of 3.X, there is a small \
  chance that the installation will fail.
jcdia_algtest_files = JCAlgTest results
E_jcdia_show = Failed to show the test results: please go to JCAppStore/data/ folder to open the .html results file manually.
E_jcdia_open_dir = Could not open the test results directory. Check the rights and/or directory presence.
jcida_done = The testing has finished. A browser should've opened with the results. You can find them also in the JCAppStore/data/ folder.

# store -->
website = A list of related websites
author = Author: 
custom_install = Custom installation
H_custom_install = Choose specific version and SDK to install.
custom_version = Version
H_custom_version = Version to install. Install older version\nonly if required by compatibility with host app.
custom_sdk = sdk
sdk_version = SDK version: 
H_custom_sdk = Setup development kit used for the version\nchosen to install. SDK is a tool bundle for\ncard \
  development, install sdk version which\n is supported by your card.
H_website = We strongly recommend to visit the project\nwebpage to get more detailed info.
use = Use guide (read to save a lot of time!)
H_use = Installation and use guide. More info\non the website.
W_default_app = In order to work flawlessly, this applet needs to be main. For more information see help \
  section 'main applet'.
noinstall = NOT ALLOWED

copy = Copy

#  main menu -->s
readers = Readers
help = Help
file = App
quit = Quit 
H_quit = exit the application
cmd = CommandLine guide
H_cmd = how to use command line
applet_usage = Using the installed applet
auth = Card authentication
H_auth = key management in appstore
gpg = GnuPG: file signatures
H_gpg = verifying the sourcecode authors
H_applet_usage = how to use installed applets

modes = Modes
modes_desc = Application behavioral modes
enable_hints = Show description 
enable_verbose = Verbose mode 
enable_simple = Simple mode 
exclusive_mode = Card exclusive mode 
keep_auto_install = Keep auto-installed mode 

installed = Applet successfully installed.
install_failed = Installation failed
memory_could_not_obtain = Failed to obtain the card memory info.
card_free_memory_over32kb = The card has more than 32kb (e.g. a lot) of free memory available. Getting the exact number \
  is possible only with the newest smart card API, not supported by the majority of cards yet.
reinstall_warn_title = Data safety notice
reinstall_warn = This action will uninstall any applets on the card that has the same ID. If you are either performing reinstall \
  (the same package and/or applet is already present on the card), or there is a collision in applet or package ID, the colliding \
  applets and packages will be erased and all their data lost. Are you sure you want to continue?
reinstall_warn_dont_show_again = dont show this again
generic_install_failure = We could not complete the action: the applet must be installed on the card, but an attempt \
  to install it failed. Try to install the applet manually and re-do de action.
card_free_memory = Free persistent memory:
delete_failed = Deletion failed
logger = Logger 
logger_title = JCAppStore logger: all logs in 
#  utils -->
failed = Failed.
done = Done.
retry = retry
no_results = No results found.
settings = Settings
ok = OK
continue = Continue
cancel = Cancel
abort = abort
no_last_card = No card inserted since app started.
background = Background
change = Change
default = default
no_install_file = Installation file not found. Please, refresh the store.
reset_default = Restore default
language = Language
reset_to_apply = Changes will apply after an restart.
reset_to_apply_title = Change event notification
blur = Blur amount:
unknown = unknown
comma_author = , author 
comma_version = , version 
comma_sdk = , with sdk 
image_limit = Images (png, jpeg/jpg, bmp) less than 1.5 MB
event = Event
CAP_install_applet = INSTALL APPLET 
from_pc = from this PC
cap_files = Card applet files (.cap)
W_do_not_unplug = Do not unplug the card during the install process. Following package and its chosen \
  applet will be installed:
advanced_settings = Advanced settings
install_params = \tinstallation parameters: 
H_install_params = Some applets may require additional information during installation. Check the applet use guide.
force_install = force installation
H_force_install = Will re-install the applet even if present on a card. In \
  case the match is found, the previous package and its applets are removed.
applet_ids = \tapplet IDs: 
H_default_aid = We recommend not to modify default AIDs. Choose the applet to install if multiple displayed. \
  Warning: AID must have IN TOTAL between 10 and 32 characters.
management = Management
uninstall = uninstall
H_uninstall_apk = Do you really want to uninstall this applet? 
H_uninstall_pkg_simple = Do you really want to remove this package?
H_uninstall_apk_pkg_remain = The package will remain on the card.
H_uninstall_pkg = Delete package. The deletion will fail in case there is active applet instance that belongs to this package.
custom_command = send command APDU
H_custom_command = Send APDU command to the applet. This is usually done by host application, but it is here in case \
  you have to send some personalisation data in order to finish applet installation. If you are uncertain, don't use \
  this feature unless it is explicitly said in the 'Use' applet description or in tutorials.
H_valid_command = The apdu may consist of 0-9, a-f and A-F characters. Moreover, the command can contain these sequences, \
  ignored when processing: '0x', '0X', ':', ';' and spaces. E.g. valid command is also '0x61 0x81 0xAF...'
E_APDU_1 = Invalid command - Apdu must be at least 4 bytes (8 hex characters) long.
E_APDU_PREFIX = Invalid command - data length: 
E_APDU_SUFFIX = , but the command (LC byte) states: 
E_APDU_NOTE = . Note: the command LC is 0x00, indicating: 00 [LC-upper] [LC-lower] format.

T_delay_too_long = It seems the action takes a bit longer. Please, be patient.
T_delay_do_not_pull = Do not remove the card or the card reader.
T_delay_while = The process must finish first. It might take a while.
T_delay_test = Some actions, such as JCAlgTest testing, might take even minutes to finish.
T_delay_finish = Sometimes, the card might be unresponsive for a while. Do not worry, the process will eventually finish.

E_no_resources = The src/main/resources/ folder is missing in the application root folder.
E_support_cmd = Could not finish the operation: only windows cmd or bash command line interface is supported.
E_operation_cmd = Could not finish the operation: failed to execute a command-line call.
custom_command_ok = Command successfully processed
custom_command_no_data = No data returned
custom_command_fail = Command APDU failed: card returned 0x
custom_command_fail_generic = The card returned unknown error.
E_custom_command_HW = Failed to send the command - replug the reader with your card and try again.
E_installforinstall = Unable to finish the installation: re-plug the card/reader and try again. Also try it both with \
  'Card Exclusive mode' enabled and disabled. Repeated installation will require you \
  to enable force (re)installation or delete the loaded package first. If this error persists the card might be broken.
H_advanced_syntax = Length must be even. Valid characters are only 0..9A..F
in_hex = Command is in hexadecimal form
I_use_default_keys_1 = <p>We don't know this card type and its default test key. Do you want to try this widely used Master key?</p>
I_use_default_keys_2 = <p>We recommend doing this only once. The card gets irreversibly blocked after several \
  (around 10) incorrect tries.</p>
signature_title_dialog = File signature
custom_sign_button = Search for detached signature file....
install_ask = Continue to install?
H_custom_sign = Specify detached signature file for PGP. The key must be present in your keyring. If not specified, the \
  signature will not be verified.
master_key = master key
key_not_found = Default test key not found
pgp_loc = GnuPG install
H_pgp_loc = or specify the GnuPG executable path here
H_pgp_loading = Verifying the signature...
get_memory = Card memory info
test_card = Run tests (JCAlgTest)
pgp_specify_loc = search for GnuPG
wait_sec = Working...
H_verified_not_trusted = Warning: the key used for this signature is not trusted ultimately.
H_verified_no_author = The signature was verified.
H_verified_key = The integrity of this release was signed and verified using key fingerprint: <br>
H_not_verified = Integrity of this version was not verified. It is not safe to install this version. \
  Either try to re-download the store or try to install different version or sdk.
H_unable_to_read = The files for signature verification are blocked by another program. Make sure no other \
  processes intervene with the /store folder (or just try again in a while).
H_no_file_pgp = The file for signature was not found. To verify the signature, try to re-download the store.
H_signature_failed = The signature process failed. The signature file may be damaged or you are missing public \
  key in your gpg keyring, or there is a problem in paths (see logs: Alt+L).
import = Import
W_applet_deletion1 = This package belongs to an active applet instance(s): 
W_applet_deletion2 = The package cannot be uninstalled while the applet is on the card. Either delete the applet first \
  or confirm the applet deletion now.
W_confirm_applet_delete = I agree. I am aware that <b>this process cannot be undone</b>.
no_space_1 = The installation will occupy approximately 
no_space_2 = while the card remaining free memory size is only 
no_space_3 = The installation might fail due to low memory. Continue?

default_selected_ask1 = In order to work flawlessly the application you are installing requires to be main. \
  However, the same may apply for the current main application on this card. There may be only one main application at the time. \
  Current main application: 
default_selected_ask2 = Requires to be selected: 
default_selected_ask_title = Choose the main applet
default_selected_yes = Install new as main
default_selected_no = Keep old as main

#<string id="145"><b>Warning:</b> do not unplug the card during the deletion process. Following package and all its applet instances will be removed:
chbox_force_delete = force deletion
chbox_force_delete_expl = Will delete all dependencies of the chosen applet.
W_personal_data = personal data (e.g. security keys). All data will be completely and irreversibly deleted.

# exceptions-->
E_install_no_file_1 = Installation error: file 
E_install_no_file_2 = doesn't exist.
E_install_load_failed = Installation failed. Try to re-plug the card and perform install again.
E_image = Image error: failed to read the given image. Using default background instead.
E_install_invalid_data = Invalid data provided: invalid installation parameters or applet AID if modified. Please fill in correct values.
E_delete_invalid_data = Deletion aborted: invalid deletion data.
E_install_already_present = Installation will fail: you have already installed an applet with the same AID on this card. \
  To perform the installation, either change applet AID or enable 'force' option to remove any conflicts. \
  Warning: changing AID without reason will make the applet invisible to host applications.
E_delete_sd = Unable to delete security domain.
E_no_applets_file = The list of installed applets for this card from this store is missing.
E_save_card_name = Unable to save the card name. Make sure the file 'cards.ini' is writeable or not locked by another program.
E_deserialize_applets = The applet details cannot be loaded. The applets will work but won't be recognized as known.
E_load_card = The card cannot be loaded. Please, contact us to solve the problem.
E_card_details_failed = Unable to save card details. The card won't be recognized as known card.
E_missing_types = The card types database has been deleted. Download new one from our github repo.
E_loading_failed = Card loading failed
E_unknown_error = Unknown error occurred. Re-inserting the card and/or reader will help. Card exclusive mode could be also useful (in case another smart card app is running).
E_no_aid_on_card = Deletion failed: no such AID on card. Try to re-insert the card to get actual information about the \
  content.
E_delete_not_allowed = Deletion failed: not allowed. The applet is still possibly active. If you are uninstalling a package without \
  simple mode, uninstall its applet first. Otherwise, there is a collision in applet/package ids. Enable package listing in 'My Card' \
  section and search for any instance with similar ID that might prevent you from uninstalling the desired applet. The uninstall will \
  be possible after removing such instance. When deleting this instance, disable 'simple mode' that would uninstall any dependencies, \
  so that you will not lose any data. Package deletion without simple mode is safe.
E_connect_fail = Failed to connect to selected reader. Re-plug the reader and re-insert the card. Try this with and without 'Card exclusive mode'. If it doesn't help, \
  feel free to raise an issue on GitHub.

# SW translations ! THESE ARE USED BUT PASSED AS ARGS SO THE BUNDLE DOESN'T SEE USAGE-->
E_invalid_INS = Invalid instruction for execution. This means that command for the card sent is not supported. \
  For more info, search 'APDU invalid INStruction' or 'SW 0x6D00'.
E_invalid_CLA = Invalid instruction class for execution. This means that command for the card sent is not supported. \
  For more info, search 'APDU invalid CLA' or 'SW 0x6E00'.
E_invalid_P1P2 = Invalid instruction parameters P1 or P2 for execution. This means that the requested action requires \
  different parameters to be sent. Fusor more info, search 'APDU invalid P1P2' or 'SW 0x6A86'.
E_invalid_LC = Invalid Lc byte for outcoming data length. The applet was expected to return different data length.
E_invalid_memory = Fatal error: memory management failed during process. For more info, search 'SW 0x6581'.
E_full_memory = Memory is full. Uninstall some applets to free space. For more info, search 'SW 0x6A84'.
E_invalid_data = Incorrect installation data. Check the format, length, typos, of your input from advanced install section. \
  Check whether the applet requires installation data (use section). Check whether the card supports sdk version. Also, the software may be invalid. \
  For more info, search 'SW 0x6A80'.
E_security_failure = Security status not satisfied. The action was not considered secure and thus aborted. \
  For more info, search 'SW 0x6982'.
E_use_failure = Incorrect applet use. When installing: missing or wrong install params / applet uses algorithms or requires technology (such as NFC) \
  not supported by your card. The install parameters should be described in the 'Use' section if required. \
  Also, make sure there are no similar applets present on the card. The store should automatically remove collisions; \
  yet some applets might use custom AIDs. <br><br>Please note: in case of a big application, try to uninstall some applets first. \
  The free memory detection feature cannot detect insufficient memory with sizes around 30kB.
E_pkg_not_found = Applet or package not found. For more info, search 'SW 0x6A82'.
E_data_not_found = Referenced data not found. For more info, search 'SW 0x6982'.
E_action_denied = Unable to process requested action. The card is LOCKED. This store does not work with LOCKED cards. \
  For more info, search 'Smart Card in locked state' or 'SW 0x6283'.
E_action_not_supported = Requested action not supported (this card life-cycle state is probably LOCKED). \
  For more info, search 'SW 0x6A81'.
E_init_failed = Initialization failed. Card is maybe locked. If so, the store won't support this card.
E_eof = Unexpected end of uploaded file. Check the file correctness.
E_not_enough_data = The amount of provided in response is not enough. Please check the requirements for the command.
E_command_not_allowed = The command is not allowed. Check your rights for this command. Maybe you have to authenticate \
  first.
E_generic_invalid_command = The command parameters or data is incorrect.
E_key_usage_error = Key usage error. Check the key types and format.
E_record_not_found = Requested data not found.
E_referenced_not_found = Missing data to perform requested operation. If this error occurs on install and you have \
  correct install parameters, check for your card algorithm support: for technology used ask vendor, for the technology \
  supported by your card see JCAlgTest website. If this error occurs on uninstall, try to delete the package instead. \
  There might be problem with AID mismatch and/or collision.
E_length_00 = Correct length for 256 bytes data in array (maximum transfer size) should equal in LE to 0x00.
E_load_failed = Failed to load the applet onto card. Make sure the sdk of applet is compatible with your card.
ES_eof = The installation file is corrupted. Re-download the store.
ES_generic = Action failed. Try again. In case this error persists, check whether the card is not broken.
ES_probably_locked = The card is probably locked. The store does not support such cards.
E_card_default = Could not perform the operation. Try to re-plug the card reader. Also try it with both "Card Exclusive mode" \
  enabled and disabled. If this does not help, the card is probably broken.
E_default = Something went wrong. Try to re-start the application. If the problem persists, notify us.
E_default_try_again = Oops, something went wrong. Please, try again after re-plugging the reader/card.

# hints formatted in html-->
E_initialized = Card is in initialized state.
H_initialized = This card has been initialized. This is not an initial state: the store works with cards in OP_READY state \
  only (operation ready means that the card is ready for management).
E_secure_state = Card is in secured state.
H_secure_state = <p>This card has been secured. This means that the card has been marked as ready to work in hostile \
  environment. We cannot work with such a card and the transformation process is irreversible.</p>
E_locked = Card is in locked state.
H_locked = <p>Card is in locked state. It means that no management alternations can be performed and no other applet or \
  security domain can be selected - the card can run only one selected applet. We cannot work with such a card and the \
  transformation process is irreversible.</p>
E_terminated = Card is in terminated state.
H_terminated = <p>Card has been terminated. It means that this card will not respond to almost any command and thus the \
  card is useless. Nor we, nor anyone else can work with such a card and the transformation process is irreversible.</p>
E_no_life_state = Card life cycle state not detected.
H_no_life_state = <p>Card life cycle state can tell us whether the card is ready for installing, deleteing and other \
  management, or whether the card is no longer manageable. We were unable to determine this information and therefore \
  we will not support this card to avoid any possible damage. Re-plugging the card could help, as fetching card info \
  might (rarely) fail.</p>
E_unknown_key = Master key unknown.
E_authentication = Card authentication failed.
E_master_key_not_found = <p>Master key is unknown. We didn't try to authenticate to this card. \
  Modify <b>cards.ini</b> file inside your documents folder: JCAppStore/data/cards.ini. \
  Set <b>key = </b>[correct value here] and <b>auth = true</b>. Also, some cards need a diversifier specified (EMV, VISA2), \
  ask your vendor if unsure. Even with correct key value and missing diversifier if required, the authentication will fail.</p>
H_authentication = <p>We were unable to guess the correct master key (password) for this card. \
  Modify <b>cards.ini</b> file inside your documents folder: JCAppStore/data/cards.ini. \
  Set <b>auth = true</b> and <b>key = </b>[correct value here]. Also, some cards need a diversifier specified (EMV, VISA2), \
  ask your vendor if unsure. \
  <br /> <b>WARNING:</b> make sure you know the correct key. After several (around 10) incorrect tries, the card \
  will get bricked.</p> 
H_not_authenticated = <p>We didn't try to authenticate to this card (auth = false is set). \
  Modify <b>cards.ini</b> file inside your documents folder: JCAppStore/data/cards.ini. \
  Set <b>auth = true</b> and <b>key = </b>[correct value here]. Also, some cards need a diversifier specified (EMV, VISA2), \
  ask your vendor if unsure. Even with correct key value and missing diversifier if required, the authentication will fail.\
  <br /> <b>WARNING:</b> make sure you know the correct key when setting auth = true. \
  After several (around 10) incorrect tries, the card will get bricked.</p>
E_communication = Card detection failed.
H_communication = Re plug the reader or card and try again.
E_generic = The following error has occurred: 
W_internet = <p>Internet connection failed. The store displayed is the last saved store version. The store data might not be up to date.</p>
E_install_not_found = <p>Unable to find requested file for install. Try to re-download the store or choose different version or sdk.</p>
E_pkg_present = Package already present on this card. It can be re-installed using advanced 'force install' option.
E_invalid_custom_install = Invalid app version or sdk selected for install.
has_keys = Keys 
H_has_keys = If this applet stores private keys\nor other sensitive data.\nIf you keep this checked, the store will\ndisplay \
  warning on attempt to uninstall.
E_timeout = The action was taking too long to finish and the process was killed. Please, create and issue with providing your log file \
  to help us solve the problem.
E_load_failed_io = Could not load the applet onto card. This can be caused by colliding package ID (make sure no same package ID is \
  present on the card). Another cause may be that the applet cannot be run on the card - incompatible SDK version or missing technology \
  features (such as NFC).
E_no_java_executable = Invalid file. Either add java executable folder to your PATH environment variable, or select the java executable. \
  Otherwise, we are unable to run the tests.
# keywords for search engine-->
install_kwords = install,applet
jcappstore = Applet Store

ask_for_card_name = Enter new card name:
java_executable = "Select java (JRE) executable"

no_info_file = Unable to find the usage information. Please, notify us (possibly through a GitHub issue) about this problem so we can add the \
  usage guidelines for better user experience. Thank you.
webengine_reset = Reload original guide

#reporter-->
error_desc = Error description:
issues_url = Please, create a new issue here.
how_to_fill = First, describe any actions taken before the error event occurred. Also, attach a log file that has been \
  created. The file name should be 'jcAppStore.log'
log_folder = Open logs folder
e_open_folder = It seems the JCAppStore data folder in your home directory has been damaged \
  or modified. The logs directory should be in C:\\[your username]\\Documents\\JCAppStore\\data\\logs\\ on Windows or \
  ~/JCAppStore/data/logs/ on UNIX-like system.
e_open_folder_title = Could not find log folder. 
attachment_desc=An unknown error has occurred and the application has been terminated. In order to resolve the issue, \
  please notify us. To do so, create a new issue in our GitHub repository along with error description below.

# hints-->
H_name = The applet or package name.\nThe ID is displayed\nif unknown. 
H_version = Applet version installed, unknown,\nif not installed from JCAppStore.
H_id = Applet or package unique ID.\nApplet id usually contains a part of it's\nown package ID.
H_type = Each card content consists of several objects:\nSecurity Domains - applets for management.\nFor example, those applets \
  install and delete\nother applets. Issuer SD is a SD uploaded\nby the card issuer.\nApplets - the instances of installed\
  \nsoftware from package.\nPackages - the context for each different\napplet installed.
H_sd_assinged = The security domain assigned\nto this applet.

# unauthorized card error messages
E_unauthorized = We don't know this card Master Key - we cannot perform operations that require this key (such as \
  applet installation or deletion).
E_install = Cannot install applets with unknown Master Key.
E_nokey_retry = load card without key

ini_commentary = #  This file contains list of all cards parsed by JCAppStore. \n\
  #\n\
  #  Modifying this file is not discouraged, though we stringly recommend\n\
  #  to keep a copy of it in case somehing goes wrong. Also, we are not \n\
  #  responsible for any damage caused to your card, especially allowing \n\
  #  the authentication withou key change.\n\
  #\n\
  #  __________\n\
  #  Field description:\n\
  ###    name\t\t name of the card if known.\n\
  ###    key\t\t master key used for athentication, allowed characters\n\
  #   0..9A..F, must be even length between 32 and 64 characters\n\
  ###    kcv\t\t key check value, not a necessary item, sometimes provided\n\
  #  by vendor\n\
  ###    diversifier\t method to derive all keys needed from the master key,\n\
  #  leave blank if not sure\n\
  ###    auth\t\t whether the app tries to authenticate to this card, do not\n\
  #  change to true without changing the key field to correct value! use\n\
  #  "true" or "false" values only (without the quotes)\n\
  ###    atr\t\t card atr number, we recommend not to change\n\
  ###    cin\t\t card cin number, we recommend not to change\n\
  ###    card_data\t card data description, we recommend not to change\n\
  ###    card_capabilities\t card capabilities description, we recommend\n\
  #  not to change\n\
  ###    key_info\t info about the keys used\n\n\
  #  !!! This file contains list of **all** cards parsed by JCAppStore. !!!\n\
  #  !!! Modify only the information block that belongs to the desired card. !!!\n\n\n